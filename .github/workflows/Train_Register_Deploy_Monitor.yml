name: CI CD Pipeline on Model

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run training script
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          python train_model.py

      - name: Upload model and metrics artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            model.pkl
            metrics.json

      - name: Commit and push artifacts
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add model.pkl metrics.json
          git commit -m "Add trained model and metrics from workflow"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Register:
    needs: Train
    runs-on: CREDITCARD
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: .

      - name: Register model to MLflow
        env:
          MLFLOW_TRACKING_URI: http://127.0.0.1:5000
        run: |
          python register_model.py

  Champion-Selection:
    needs: Register
    runs-on: CREDITCARD
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: .

      - name: Run champion selection
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          MLFLOW_TRACKING_URI: http://127.0.0.1:5000
        run: |
          python championselection.py
      - name: Configure git for commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push champion_model.pkl if changed
        shell: powershell
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add champion_model.pkl
          if (-not (git diff --cached --quiet)) {
            git pull --rebase origin main
            git commit -m "Update champion_model.pkl artifact [skip ci]"
            git push
          }
  Inferencing:
    needs: Champion-Selection
    runs-on: CREDITCARD
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run batch inference and save predictions on Snowflake
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          python inferencing.py

  Monitoring:
    needs: Inferencing
    runs-on: CREDITCARD
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run monitoring and log Evidently report to MLflow
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          MLFLOW_TRACKING_URI: http://127.0.0.1:5000
        run: |
          python monitor.py

  build-and-push-to-dockerhub:
    needs: Monitoring  # Optional: only run after monitoring
    runs-on: ubuntu-latest
    steps:
      - name: üõéÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üê≥ Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: List files in Dockerize folder
        run: ls -l Dockerize
      
      - name: üèóÔ∏è Build Docker image from Dockerize folder
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mlops-infer-monitor:latest \
            -f Dockerize/Dockerfile \
            Dockerize

      - name: üì¶ Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mlops-infer-monitor:latest
